name: Build Password Board

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create release with artifacts'
        required: false
        type: boolean
        default: false

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          clang \
          cmake \
          ninja-build \
          pkg-config \
          libgtk-3-dev \
          libblkid-dev \
          liblzma-dev

    - name: Enable Linux desktop
      run: flutter config --enable-linux-desktop

    - name: Install dependencies
      run: flutter pub get

    - name: Build Linux release
      run: flutter build linux --release

    - name: Create Linux archive
      run: |
        echo "Checking build directory structure..."
        ls -la build/linux/x64/release/ || echo "Build directory not found"
        if [ -d "build/linux/x64/release/bundle" ]; then
          echo "Creating Linux archive..."
          cd build/linux/x64/release/bundle
          tar -czf "${GITHUB_WORKSPACE}/password_board_linux.tar.gz" .
          echo "Archive created successfully"
          ls -la "${GITHUB_WORKSPACE}/password_board_linux.tar.gz"
        else
          echo "Linux bundle directory not found, checking alternatives..."
          find build/linux/ -name "*" -type d | grep -i release || echo "No release directories found"
          echo "Error: Linux build directory not found"
          exit 1
        fi

    - name: Upload Linux build
      uses: actions/upload-artifact@v4
      with:
        name: password-board-linux
        path: password_board_linux.tar.gz
        retention-days: 30

  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop

    - name: Install dependencies
      run: flutter pub get

    - name: Build Windows release
      run: flutter build windows --release

    - name: Create Windows archive
      run: |
        echo "Checking Windows build directory structure..."
        Get-ChildItem build/windows/x64/runner/ -ErrorAction SilentlyContinue || echo "Build directory not found"
        if (Test-Path "build/windows/x64/runner/Release") {
          echo "Creating Windows archive..."
          cd build/windows/x64/runner/Release
          Compress-Archive -Path . -DestinationPath "${env:GITHUB_WORKSPACE}/password_board_windows.zip" -Force
          echo "Archive created successfully"
          Get-Item "${env:GITHUB_WORKSPACE}/password_board_windows.zip"
        } else {
          echo "Windows Release directory not found, checking alternatives..."
          Get-ChildItem build/windows/ -Recurse -Directory | Where-Object { $_.Name -like "*Release*" -or $_.Name -like "*release*" }
          echo "Error: Windows build directory not found"
          exit 1
        }

    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: password-board-windows
        path: password_board_windows.zip
        retention-days: 30

  build-macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Enable macOS desktop
      run: flutter config --enable-macos-desktop

    - name: Install dependencies
      run: flutter pub get

    - name: Build macOS release
      run: flutter build macos --release

    - name: Create macOS archive
      run: |
        echo "Checking macOS build directory structure..."
        ls -la build/macos/Build/Products/ || echo "Build directory not found"
        if [ -d "build/macos/Build/Products/Release" ]; then
          echo "Creating macOS archive..."
          cd build/macos/Build/Products/Release
          ls -la *.app || echo "No .app files found"

          # Find the actual app name
          APP_NAME=$(ls -d *.app 2>/dev/null | head -n1)
          if [ -n "$APP_NAME" ]; then
            echo "Found app: $APP_NAME"
            # Create archive in repository root
            zip -r "${GITHUB_WORKSPACE}/password_board_macos.zip" "$APP_NAME"
            echo "Archive created successfully"
            ls -la "${GITHUB_WORKSPACE}/password_board_macos.zip"
          else
            echo "Error: No .app files found in Release directory"
            ls -la
            exit 1
          fi
        else
          echo "Error: macOS build directory not found"
          exit 1
        fi

    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: password-board-macos
        path: password_board_macos.zip
        retention-days: 30





  release:
    name: Create Release
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true') || (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'))

    steps:
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Create release archives
      run: |
        cd artifacts
        # Create a combined release archive
        zip -r ../password-board-complete.zip .

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: password-board-complete.zip
        tag_name: build-${{ github.run_number }}
        name: Password Board Build #${{ github.run_number }}
        draft: true
        prerelease: true
        body: |
          ## Password Board - Multi-Platform Release

          This release contains builds for all supported platforms:

          ### Downloads:
          - **Linux**: `password_board_linux.tar.gz`
          - **Windows**: `password_board_windows.zip`
          - **macOS**: `password_board_macos.zip`

          ### Installation Instructions:

          **🐧 Linux:**
          ```bash
          tar -xzf password_board_linux.tar.gz
          cd password_board
          ./password_board
          ```

          **🪟 Windows:**
          ```cmd
          # Extract password_board_windows.zip
          # Run password_board.exe
          ```

          **🍎 macOS:**
          ```bash
          # Extract password_board_macos.zip
          # Run passboard_app.app
          ```

          ### Features:
          - 🔐 Secure password management for MSPs
          - 📋 One-click copy functionality
          - 🔍 Advanced search and filtering
          - 📊 Client organization
          - 🎨 Modern Material Design 3 UI
          - 🔄 Cross-platform compatibility

          ### System Requirements:
          - Linux: Ubuntu 18.04+ or compatible
          - Windows: Windows 10 version 1903 or later
          - macOS: macOS 10.14.6 or later

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
